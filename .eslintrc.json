{
  "root": true,
  "ignorePatterns": ["projects/**/*"],
  "parserOptions": {
    "project": "./tsconfig.json"
  },
  "overrides": [
    {
      "files": ["*.ts"],
      "extends": [
        "eslint:recommended",
        "plugin:@typescript-eslint/recommended",
        "plugin:@angular-eslint/recommended",
        "plugin:@angular-eslint/template/process-inline-templates",
        "plugin:prettier/recommended"
      ],
      "rules": {
        //error prevention
        "array-callback-return": ["error", { "checkForEach": true }],
        "no-await-in-loop": "error",
        "no-constant-binary-expression": "error",
        "no-constructor-return": "error",
        "no-promise-executor-return": "error",
        "no-self-compare": "error",
        "no-template-curly-in-string": "error",
        "no-unmodified-loop-condition": "error",
        "no-unreachable-loop": "error",
        "no-unused-private-class-members": "error",
        "no-use-before-define": [
          "error",
          {
            "functions": false,
            "classes": true,
            "variables": true,
            "allowNamedExports": false
          }
        ],
        "require-atomic-updates": "error",
        "@angular-eslint/directive-selector": [
          "error",
          {
            "type": "attribute",
            "prefix": "app",
            "style": "camelCase"
          }
        ],
        "@angular-eslint/component-selector": [
          "error",
          {
            "type": "element",
            "prefix": "app",
            "style": "kebab-case"
          }
        ],
        "@angular-eslint/contextual-lifecycle": "error",
        "@angular-eslint/no-conflicting-lifecycle": "error",
        "@angular-eslint/no-host-metadata-property": "error",
        "@angular-eslint/no-inputs-metadata-property": "error",
        "@angular-eslint/no-output-native": "error",
        "@angular-eslint/no-outputs-metadata-property": "error",
        "@angular-eslint/use-lifecycle-interface": "error",
        "@angular-eslint/component-class-suffix": "error",
        "@angular-eslint/directive-class-suffix": "error",
        "@angular-eslint/no-input-rename": "error",
        "@angular-eslint/no-output-on-prefix": "error",
        "@angular-eslint/no-output-rename": "error",
        "@angular-eslint/use-pipe-transform-interface": "error",
        "@typescript-eslint/explicit-function-return-type": "warn",
        "@typescript-eslint/no-empty-function": "warn",
        "@typescript-eslint/no-unused-vars": "warn",
        "@typescript-eslint/no-useless-constructor": "warn",
        "@typescript-eslint/no-confusing-non-null-assertion": ["error"],
        "@typescript-eslint/no-confusing-void-expression": ["error", { "ignoreArrowShorthand": true }],
        "@typescript-eslint/no-explicit-any": ["warn"],
        "@typescript-eslint/no-extra-non-null-assertion": ["error"],
        "@typescript-eslint/no-floating-promises": ["error"],
        "@typescript-eslint/no-non-null-asserted-optional-chain": ["error"],
        "@typescript-eslint/no-non-null-assertion": ["error"],
        "@typescript-eslint/no-require-imports": ["error"],
        "@typescript-eslint/no-unnecessary-boolean-literal-compare": ["error"],
        "@typescript-eslint/no-unnecessary-condition": ["error"],
        "@typescript-eslint/prefer-for-of": ["error"],
        "@typescript-eslint/prefer-nullish-coalescing": ["error"],
        "@typescript-eslint/prefer-readonly": ["error"],
        "@typescript-eslint/promise-function-async": ["error", { "checkArrowFunctions": false }],
        "@typescript-eslint/switch-exhaustiveness-check": ["error"],
        // good practises
        "camelcase": ["error", { "properties": "never" }],
        "eqeqeq": "error",
        "new-cap": ["error", { "capIsNew": false }],
        "no-array-constructor": "error",
        "no-console": ["error", { "allow": ["error"] }],
        "no-else-return": ["error", { "allowElseIf": false }],
        "no-extend-native": "error",
        "no-lonely-if": "error",
        "no-param-reassign": "error",
        "no-return-assign": "error",
        "no-throw-literal": "error",
        "no-var": "error",
        "object-shorthand": "error",
        "prefer-const": "error",
        "prefer-rest-params": "error",
        "prefer-spread": "error",
        "prefer-template": "error",
        "radix": "error",
        "yoda": "error",
        // style
        "curly": ["warn", "all"],
        "lines-between-class-members": ["error", "always", { "exceptAfterSingleLine": true }],
        "padding-line-between-statements": ["error", { "blankLine": "always", "prev": "*", "next": "return" }],
        "operator-linebreak": ["warn", "none"],
        "block-spacing": ["warn", "always"],
        "complexity": ["warn", { "max": 5 }],
        "max-depth": ["warn", 1],
        "max-lines": ["warn", 200],
        "max-params": ["warn", 2],
        "max-statements-per-line": ["warn", { "max": 1 }],
        "no-magic-numbers": [
          "warn",
          { "detectObjects": false, "enforceConst": true, "ignore": [-1, 0, 1, 2, 10, 100], "ignoreArrayIndexes": true }
        ],
        "no-multiple-empty-lines": ["warn", { "max": 1, "maxEOF": 1 }],
        "no-nested-ternary": "warn",
        "no-unneeded-ternary": "warn",
        "no-unused-vars": "off",
        "one-var-declaration-per-line": ["warn", "always"],
        "operator-assignment": ["warn", "always"],
        "@typescript-eslint/naming-convention": [
          "warn",
          {
            "format": ["camelCase"],
            "leadingUnderscore": "forbid",
            "selector": "default"
          },
          {
            "format": ["PascalCase"],
            "selector": "typeLike"
          },
          {
            "format": ["PascalCase"],
            "prefix": ["T", "K"],
            "selector": "typeParameter"
          },
          {
            "format": ["UPPER_CASE"],
            "selector": "enumMember"
          },
          {
            "format": ["PascalCase"],
            "prefix": ["can", "did", "has", "is", "must", "needs", "should", "will"],
            "selector": ["memberLike", "variableLike"],
            "types": ["boolean"]
          }
        ]
      }
    },
    {
      "files": ["*.html"],
      "extends": [
        "plugin:@angular-eslint/template/all",
        "plugin:@angular-eslint/template/accessibility",
        "plugin:prettier/recommended"
      ],
      "rules": {
        "@angular-eslint/template/i18n": "off",
        "@angular-eslint/template/attributes-order": "off"
      }
    }
  ]
}
